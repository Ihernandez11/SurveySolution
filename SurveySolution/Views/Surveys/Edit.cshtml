@model SurveySolution.Models.ViewModels.SurveyQuestionAnswerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Survey</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SurveyID)

    <div class="form-group">
        @Html.LabelFor(model => model.SurveyTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SurveyTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SurveyTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SurveyDesc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SurveyDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SurveyDesc, "", new { @class = "text-danger" })
        </div>
    </div>

    <h4>Questions</h4>
    
    <div id="questionGroup" count="@ViewBag.QuestionCount">

        @for (int i = 0; i < Model.Questions.Count(); i++)
        {
        <div id="newQuestion">
            <div class="form-group">
                @Html.LabelFor(model => model.Questions[i].QuestionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="cold-md-10">
                    @Html.EditorFor(model => model.Questions[i].QuestionName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Questions[i].QuestionName, "", new { @class = "text-danger" })
                    <!--QuestionType Dropdown list-->
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Questions[i].Required, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Questions[i].Required, new { @checked = "checked" })
                </div>
            </div>
        </div>
        }

    </div>

    <input type="button" value="Add Question" class="btn btn-primary" onclick="addQuestionForEditPage();"><br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
